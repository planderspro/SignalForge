name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build application
        run: npm run build

      - name: Create deployment package
        run: |
          cd dist
          zip -r ../signalforge-${{ github.ref_name }}.zip .
          cd ..

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            echo "changelog_exists=true" >> $GITHUB_OUTPUT
          else
            echo "changelog_exists=false" >> $GITHUB_OUTPUT
            echo "## Release ${{ github.ref_name }}" > temp_changelog.md
            echo "" >> temp_changelog.md
            echo "### Changes" >> temp_changelog.md
            git log --oneline $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> temp_changelog.md
          fi

      - name: Create Release
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Determine changelog body
            let body = '';
            if (fs.existsSync('CHANGELOG.md')) {
              body = fs.readFileSync('CHANGELOG.md', 'utf8');
            } else if (fs.existsSync('temp_changelog.md')) {
              body = fs.readFileSync('temp_changelog.md', 'utf8');
            } else {
              body = `## Release ${context.ref.replace('refs/tags/', '')}\n\nSee commit history for changes.`;
            }

            // Create release
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: context.ref.replace('refs/tags/', ''),
              name: `SignalForge ${context.ref.replace('refs/tags/', '')}`,
              body: body,
              draft: false,
              prerelease: context.ref.includes('beta') || context.ref.includes('alpha')
            });

            // Upload asset
            const assetPath = `./signalforge-${context.ref.replace('refs/tags/', '')}.zip`;
            const assetData = fs.readFileSync(assetPath);

            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: path.basename(assetPath),
              data: assetData,
            });

            console.log(`Release created: ${release.data.html_url}`);

      - name: Deploy to Production
        if: '!contains(github.ref_name, ''beta'') && !contains(github.ref_name, ''alpha'')'
        run: |
          echo "ðŸš€ Deploying to production..."
          # Add your deployment commands here
          echo "Production deployment would happen here"