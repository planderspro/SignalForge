name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build application
        run: npm run build

      - name: Create deployment package
        run: |
          cd dist
          zip -r ../signalforge-${{ github.ref_name }}.zip .
          cd ..

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            echo "changelog_exists=true" >> $GITHUB_OUTPUT
          else
            echo "changelog_exists=false" >> $GITHUB_OUTPUT
            echo "## Release ${{ github.ref_name }}" > temp_changelog.md
            echo "" >> temp_changelog.md
            echo "### Changes" >> temp_changelog.md
            git log --oneline $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> temp_changelog.md
          fi

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: SignalForge ${{ github.ref_name }}
          body_path: ${{ steps.changelog.outputs.changelog_exists == 'true' && 'CHANGELOG.md' || 'temp_changelog.md' }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./signalforge-${{ github.ref_name }}.zip
          asset_name: signalforge-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Deploy to Production
        if: '!contains(github.ref_name, ''beta'') && !contains(github.ref_name, ''alpha'')'
        run: |
          echo "ðŸš€ Deploying to production..."
          # Add your deployment commands here
          echo "Production deployment would happen here"